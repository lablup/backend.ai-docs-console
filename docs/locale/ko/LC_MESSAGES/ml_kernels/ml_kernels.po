# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Lablup Inc.
# This file is distributed under the same license as the Backend.AI Console
# Essential Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Console Essential Guide Enterprise R2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-11 22:28+0900\n"
"PO-Revision-Date: 2020-09-11 22:29+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ko_KR\n"
"X-Generator: Poedit 2.4.1\n"

#: ../../ml_kernels/ml_kernels.rst:3
msgid "Multi-version Machine Learning Container Support"
msgstr "Multi-version 머신러닝 컨테이너 지원"

#: ../../ml_kernels/ml_kernels.rst:5
msgid "Objectives"
msgstr "목표"

#: ../../ml_kernels/ml_kernels.rst:7
msgid "Use of images such as TensorFlow and PyTorch without user's installation"
msgstr "별도의 설치없이 TensorFlow, PyTorch 등 주요 이미지 활용"

#: ../../ml_kernels/ml_kernels.rst:8
msgid "Support multiple versions of major ML libraries"
msgstr "Terminal, JupyterLab 등의 웹 기반 개발 환경을 즉시 띄워 활용"

#: ../../ml_kernels/ml_kernels.rst:10
msgid ""
"Backend.AI provides variaous pre-built ML and HPC kernel images. Therefore, "
"users can immediately utilize major libraries and packages without having to "
"install packages themselves. Here, we'll walk through an example that takes "
"advantage of multiple versions of the multiple ML library immediately."
msgstr ""
"Backend.AI는 다양한 ML 및 HPC 커널 이미지를 사전 빌드하여 제공 합니다. 따라"
"서, 사용자는 스스로 패키지 설치를 굳이 하지 않더라도 주요 라이브러리 및 패키지"
"를 즉시 활용할 수 있습니다. 여기서는 다종 ML 라이브러리의 여러 버전을 즉시 활"
"용하는 예제를 진행합니다."

#: ../../ml_kernels/ml_kernels.rst:15
msgid ""
"Go to the Sessions page and open the session launch dialog. There may be "
"various kernel images depending on the installation settings."
msgstr ""
"Sessions 페이지로 이동하여 연산 세션 생성 다이얼로그를 엽니다. 설치 환경에 따"
"라 다양한 커널 이미지가 있을 수 있습니다."

#: ../../ml_kernels/ml_kernels.rst:22
msgid "Here, we selected the TensorFlow 2.2 environment and created a session."
msgstr "여기서는 TensorFlow 2.2 환경을 선택하고 세션을 생성해보았습니다."

#: ../../ml_kernels/ml_kernels.rst:28
msgid ""
"Open the web terminal of the created session and run the following Python "
"command. You can see that TensorFlow 2.2 version is actually installed."
msgstr ""
"생성된 세션의 웹 터미널을 열고 다음 Python 명령을 실행합니다. TensorFlow 2.2 "
"버전이 실제 설치되어 있음을 확인할 수 있습니다."

#: ../../ml_kernels/ml_kernels.rst:35
msgid ""
"This time, we select the TensorFlow 1.13 environment to create a compute "
"session. (If resources are insufficient, previous sessions are deleted)"
msgstr ""
"이번에는 TensorFlow 1.13 환경을 선택해서 연산 세션을 생성합니다. (자원이 부족"
"한 경우 이전 세션은 삭제합니다)"

#: ../../ml_kernels/ml_kernels.rst:42
msgid ""
"Open the web terminal of the created session and run the same Python command "
"as before. You can see that TensorFlow 1.13(.1) version is actually installed."
msgstr ""
"생성된 세션의 웹 터미널을 열고 이전과 동일한 Python 명령을 실행합니다. "
"TensorFlow 1.13(.1) 버전이 실제 설치되어 있음을 확인할 수 있습니다."

#: ../../ml_kernels/ml_kernels.rst:49
msgid "Finally, create a compute session using PyTorch version 1.5."
msgstr "마지막으로 PyTorch 1.5 버전을 이용해서 연산 세션을 생성합니다."

#: ../../ml_kernels/ml_kernels.rst:55
msgid ""
"Open the web terminal of the created session and run the following Python "
"command. You can see that PyTorch 1.5 version is actually installed."
msgstr ""
"생성된 세션의 웹 터미널을 열고 다음 Python 명령을 실행합니다. PyTorch 1.5 버전"
"이 실제 설치되어 있음을 확인할 수 있습니다."

#: ../../ml_kernels/ml_kernels.rst:62
msgid ""
"Like this, you can utilize various versions of major libraries such as "
"TensorFlow and PyTorch through Backend.AI without unnecessary installation "
"effort."
msgstr ""
"이처럼, Backend.AI를 통해 TensorFlow, PyTorch 등 주요 라이브러리의 다양한 버전"
"을 불필요한 설치 노력 없이 활용할 수 있습니다."
